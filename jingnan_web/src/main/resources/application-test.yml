server:
  port: 9001
spring:
  thymeleaf:
    cache: false
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://10.0.49.25:3306/jingnan_all?useUnicode=true&characterEncoding=UTF-8&serverTimezone=GMT%2B8
    username: root
    password: *****
    #password: 2021@root0819
  rabbitmq:
    host: 10.0.49.25

  redis:
    host: 10.0.49.25
  elasticsearch:
    rest:
      uris:
        - http://10.0.49.25:9200
# id生成器IdWorker配置
workerId: 1
datacenterId: 0
wxpay:
  notify_url: http://xmyrws.natappfree.cc/wpay/notify #回调地址
# 生成静态页的位置
pagepath: ~/static/items



##1. tomcat 服务调优
#server.tomcat.uri-encoding: UTF-8
## 默认200
#server.tomcat.threads.max: 1000 # 并发处理创建的最大的线程数量 server.tomcat.threads.min-spare: 100
## 最大空闲连接数，防止突发流量
## 默认100
#server.tomcat.accept-count: 1000 # 等待队列最多允许1000个线程在队列中等待
## 默认8192
#server.tomcat.max-connections: 20000 # 最大允许20000个链接被建立
## 最大工作线程数，默认200, 4核8g内存，线程数经验值800
#
#
## 暴露所有的监控点
#management.endpoints.web.exposure.include: '*'
## 定义Actuator访问路径
#management.endpoints.web.base-path: /actuator
## 开启endpoint 关闭服务功能
#management.endpoint.shutdown.enabled: true


## 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程
#server.undertow.threads.io: 1000
## 阻塞任务线程池, 当执行类似servlet请求阻塞IO操作, undertow会从这个线程池中取得线程
## 它的值设置取决于系统线程执行任务的阻塞系数，默认值是IO线程数*8
#server.undertow.threads.worker: 8000
## 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理
## 每块buffer的空间大小,越小的空间被利用越充分，不要设置太大，以免影响其他应用，合适即可
#server.undertow.buffer-size: 1024
## 每个区分配的buffer数量 , 所以pool的大小是buffer-size * buffers-per-region
## 是否分配的直接内存(NIO直接分配的堆外内存)
#server.undertow.direct-buffers: true
